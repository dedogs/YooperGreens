// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YooperGreensApp.Infrastructure.Data;

namespace YooperGreensApp.Infrastructure.Data.Migrations
{
    [DbContext(typeof(YooperGreensDbContext))]
    [Migration("20181227013948_SeedSupplierLinks")]
    partial class SeedSupplierLinks
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("YooperGreensApp.Core.Entity.Cost", b =>
                {
                    b.Property<Guid>("CostId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Price");

                    b.Property<Guid?>("SeedSupplierSeedId");

                    b.Property<Guid?>("SeedSupplierSupplierId");

                    b.Property<int>("Size");

                    b.Property<int>("Unit");

                    b.HasKey("CostId");

                    b.HasIndex("SeedSupplierSeedId", "SeedSupplierSupplierId");

                    b.ToTable("Costs");
                });

            modelBuilder.Entity("YooperGreensApp.Core.Entity.GrowingInfo", b =>
                {
                    b.Property<Guid>("SeedId");

                    b.Property<string>("Culture");

                    b.Property<string>("Diseases");

                    b.Property<string>("Fertilizer");

                    b.Property<string>("Harvest");

                    b.Property<string>("Lighting");

                    b.Property<string>("Storage");

                    b.Property<string>("Temperature");

                    b.Property<string>("Watering");

                    b.HasKey("SeedId");

                    b.ToTable("GrowingInfo");
                });

            modelBuilder.Entity("YooperGreensApp.Core.Entity.Seed", b =>
                {
                    b.Property<Guid>("SeedId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int>("Maximum");

                    b.Property<int>("Minimum");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("SeedLink");

                    b.HasKey("SeedId");

                    b.ToTable("Seeds");
                });

            modelBuilder.Entity("YooperGreensApp.Core.Entity.SeedSupplier", b =>
                {
                    b.Property<Guid>("SeedId");

                    b.Property<Guid>("SupplierId");

                    b.Property<string>("SeedSupplierLink");

                    b.HasKey("SeedId", "SupplierId");

                    b.HasIndex("SupplierId");

                    b.ToTable("SeedSuppliers");
                });

            modelBuilder.Entity("YooperGreensApp.Core.Entity.Supplier", b =>
                {
                    b.Property<Guid>("SupplierId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AffiliateLink");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("Rank");

                    b.Property<string>("SupplierLink");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("YooperGreensApp.Core.Entity.Cost", b =>
                {
                    b.HasOne("YooperGreensApp.Core.Entity.SeedSupplier", "SeedSupplier")
                        .WithMany("Costs")
                        .HasForeignKey("SeedSupplierSeedId", "SeedSupplierSupplierId");
                });

            modelBuilder.Entity("YooperGreensApp.Core.Entity.GrowingInfo", b =>
                {
                    b.HasOne("YooperGreensApp.Core.Entity.Seed", "Seed")
                        .WithOne("GrowingInfo")
                        .HasForeignKey("YooperGreensApp.Core.Entity.GrowingInfo", "SeedId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("YooperGreensApp.Core.Entity.SeedSupplier", b =>
                {
                    b.HasOne("YooperGreensApp.Core.Entity.Seed", "Seed")
                        .WithMany("SeedSuppliers")
                        .HasForeignKey("SeedId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("YooperGreensApp.Core.Entity.Supplier", "Supplier")
                        .WithMany("SeedSuppliers")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
